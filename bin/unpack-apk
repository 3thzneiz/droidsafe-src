#!/usr/bin/env python
#
# Copyright (C) 2015,  Massachusetts Institute of Technology
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# Please email droidsafe@lists.csail.mit.edu if you need additional
# information or have any questions.

from __future__ import print_function
from subprocess import call
import sys
import os
import getopt

# Gather our code in a main() function
def main(argv):
    file = ''
    try:
        opts, args = getopt.getopt(argv,"hf:")
    except getopt.GetoptError:
        print("unpack-apk -f <apkfile>")
        sys.exit(2)

    for opt, arg in opts:
        if opt == '-h':
            print("unpack-apk -f <apkfile>")
            sys.exit()
        elif opt == '-f':
            if (os.path.exists(arg)):
                file = arg
            else:
                print('apk file ' + arg + ' does not exist')

    if (file == ''):
        files = [f for f in os.listdir(".") if f.endswith('.apk')]
        if (len(files) == 1):
            file = files[0]
        else:
            print("Must either specify an existing apk file or ensure that the current directory contains one single .apk file.")
            sys.exit(1)

    apktool_framework = os.environ['DROIDSAFE_SRC_HOME']  + "/bin/apktool-framework"

    if ('APK_FRAME_PATH' in os.environ):
        apktool_framework = os.environ['APK_FRAME_PATH'] 

    call([os.environ['DROIDSAFE_SRC_HOME'] + "/bin/apktool", "--frame-path", apktool_framework, "-f", "-o", "apktool-gen", "d", file])
    #call([os.environ['DROIDSAFE_SRC_HOME'] + "/bin/apktool", "d", "-f", file, "apktool-gen"])
    call(["/bin/rm", "-fr", "res"])
    call(["mv", "apktool-gen/res", "."])
    call(["mv", "apktool-gen/AndroidManifest.xml", "."])


# Standard boilerplate to call the main() function to begin
# the program.
if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
