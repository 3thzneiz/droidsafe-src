#!/usr/bin/env python

from __future__ import print_function
import sys
import os
import subprocess

JARS = ["droidsafe-core.jar","droidsafe-libs.jar"]
MAIN_CLASS = "droidsafe.main.Main"
APAC_HOME = os.environ['APAC_HOME'] + os.sep

def run_droidsafe(args):
    libs = APAC_HOME + "bin" + os.sep
    command = []
    command.append("java")
    command.append("-cp")

    classpath = "";
    for jar in JARS:
    	classpath += libs + jar + ":";
    #needed for logback configuration
    classpath += APAC_HOME + os.sep + "config-files"
    classpath += ":."
    command.append(classpath)

    command.append("-Xms1g");
    command.append("-Xmx16g");
    if os.path.basename(args[0]).endswith("-debug"):
        command.append("-enableassertions");
    
    command.append(MAIN_CLASS)

    for arg in args[1:]:
        command.append(arg)

    #print(command)
    return subprocess.call(command)



def check_env_vars(): 
    if not "ANDROID_SDK_HOME" in os.environ:
        print("Need to set ANDROID_SDK_HOME to the root of your android sdk installation.")
        sys.exit(1)
        
    if not "APAC_HOME" in os.environ:
        print("Need to set APAC_HOME to the root of your apac repository.")
        sys.exit(1)

# Gather our code in a main() function
def main():
    check_env_vars()
    return run_droidsafe(sys.argv)


# Standard boilerplate to call the main() function to begin
# the program.
if __name__ == '__main__':
    sys.exit(main())
